-- Services
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local CoreGui = game:GetService("CoreGui")

-- Variables
local module = {}

local function loadAsset(url)
    return game:HttpGet(url)
end

local function getInviteCode(sInvite)
    return sInvite:match("/([%w-]+)$") or sInvite
end

local function getInviteData(sInvite)
    local code = getInviteCode(sInvite)
    local success, result = pcall(function()
        return HttpService:GetAsync("https://discord.com/api/invites/" .. code)
    end)
    
    if not success then
        warn("Failed to get invite data: " .. tostring(result))
        return nil
    end
    
    return HttpService:JSONDecode(result)
end

local function getInitials(sInvite)
    local initials = sInvite:sub(1, 1)
    for i = 1, #sInvite do
        local char = sInvite:sub(i, i)
        if char == " " then
            initials = initials .. sInvite:sub(i + 1, i + 1)
        end
    end
    return initials:sub(1, 3)
end

local function createPrompt(inviteTable)
    assert(type(inviteTable) == "table", "Invalid invite table")
    local inviteData = getInviteData(inviteTable.invite)
    
    if not inviteData then return end

    local val = {
        code = inviteData.code,
        name = inviteTable.name,
        iconUrl = inviteData.guild and inviteData.guild.icon and 
                  "https://cdn.discordapp.com/icons/" .. inviteData.guild.id .. "/" .. inviteData.guild.icon .. ".png",
        initials = getInitials(inviteTable.name)
    }

    return val
end

local function toggleShowPrompt(promptGui, visible)
    local frame = promptGui.Holder
    frame.Visible = visible
    local targetSize = visible and UDim2.new(0.175, 0, 0.175, 0) or UDim2.new()

    TweenService:Create(frame, TweenInfo.new(1, Enum.EasingStyle.Quint), { Size = targetSize }):Play()
    frame.UICorner.CornerRadius = visible and UDim.new(0, 8) or UDim.new(1, 0)
end

module.Prompt = function(inviteTable)
    local val = createPrompt(inviteTable)
    
    if not val then return end

    local promptGui = loadAsset("https://github.com/RegularVynixu/Utilities/raw/main/Discord%20Inviter/Assets/DiscordInvitePrompt.rbxm"):Clone()
    local holder = promptGui.Holder
    holder.ServerName.Text = val.name
    holder.ServerIcon.Image = val.iconUrl or ""
    holder.ServerIcon.ServerInitials.Text = val.initials
    holder.ServerIcon.ServerInitials.Visible = not val.iconUrl

    for _, child in holder:GetDescendants() do
        if child:IsA("TextLabel") or child:IsA("TextButton") then
            child.BackgroundTransparency = 1
            child.TextTransparency = 1
        elseif child:IsA("ImageLabel") then
            child.ImageTransparency = 1
        end
    end

    promptGui.Parent = CoreGui
    toggleShowPrompt(promptGui, true)
    
    -- Further setup for connections and button handling...
end

module.Join = function(invite)
    local inviteData = getInviteData(invite)
    if inviteData then
        -- Handle the joining logic and notifications...
    end
end

return module
